{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","enter","enterActive","exit","exitActive","Filters","titles","window","LMDirectory","updateName","evt","updateFormState","target","value","updateTitle","updateIntern","checked","resetForm","currentName","currentTitle","key","display","isIntern","Directory","state","bind","val","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props) {\n    return (\n      <div className=\"person\">\n        <h3>{props.person.name}, {props.person.title}</h3>\n        <p>\n          <img className=\" size-medium wp-image-14 alignright\" src={props.person.img} alt={props.person.name} width=\"300\" height=\"300\"  sizes=\"(max-width: 300px) 100vw, 300px\" />\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"results\">\n        <ReactTransitionGroup.TransitionGroup>\n        {props.people.map(function(person) {\n          return (\n            <ReactTransitionGroup.CSSTransition key={person.id} classNames={{\n              enter: \"animated\",\n              enterActive: \"fadeIn\",\n              exit: \"animated\",\n              exitActive: \"fadeOut\"\n            }}\n            timeout={1000}>\n              <Person person={person} />\n            </ReactTransitionGroup.CSSTransition>\n          )\n        })}\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props) {\n    var titles = window.LMDirectory.titles;\n    function updateName(evt) {\n      props.updateFormState(\"currentName\", evt.target.value);\n    }\n    function updateTitle(evt) {\n      props.updateFormState(\"currentTitle\", evt.target.value);\n    }\n    function updateIntern(evt) {\n      props.updateFormState(\"isIntern\", evt.target.checked);\n    }\n    function resetForm(evt) {\n      props.updateFormState(\"currentName\", \"\");\n      props.updateFormState(\"currentTitle\", \"\");\n      props.updateFormState(\"isIntern\", false);\n\n      // props.updateFormState({\n      //   currentName: '',\n      //   currentTitle: '',\n      //   isIntern: false\n      // });\n    }\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input type=\"text\" name=\"person_name\" placeholder=\"Name of employee\" id=\"person-name\" value={props.currentName} onChange={updateName}/>\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select name=\"person_title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n            <option value=\"\">- Select -</option>\n            {titles.map(function(title) {\n              return (\n                <option value={title.key} key={title.key}>\n                  {title.display}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"group\">\n          <label><input type=\"checkbox\" value=\"1\" name=\"person_intern\" checked={props.isIntern} onChange={updateIntern}/> Intern</label>\n        </div>\n        <div className=\"group\">\n          <input type=\"reset\" value=\"RESET\" onClick={resetForm} />\n        </div>\n      </form>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n\n    updateFormState(name, val) {\n      this.setState({\n        [name]: val\n        }, this.updatePeopleList\n      );\n    }\n\n    // search the whole employee list with current filters\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n                -1) &&\n            (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n      this.setState({\n        people: filteredPeople\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n          <Filters currentName={this.state.currentName} currentTitle={this.state.currentTitle} isIntern={this.state.isIntern} updateFormState={this.updateFormState} />\n          <People people={this.state.people}/>\n        </div>\n      );\n    }\n  }\n\n  ReactDOM.render(<Directory />, document.getElementById('directory-root'));\n})();\n"]}